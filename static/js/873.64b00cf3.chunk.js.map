{"version":3,"file":"static/js/873.64b00cf3.chunk.js","mappings":"yLAGA,MAAMA,EAAWC,IAAA,IAAC,MAChBC,EAAK,KAAEC,EAAI,MAAEC,EAAK,OAAEC,GACrBJ,EAAA,OACCK,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAKF,SAAEL,KACjBM,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,GAAOK,EAAAA,EAAAA,KAAA,KAAGE,KAAMP,EAAKI,SAAEF,EAAOD,KAAcC,EAAOD,OACrD,EAcPJ,EAASW,aAAe,CACtBN,OAASO,GAAMA,EACfT,KAAM,KACNC,MAAO,MAGT,UCOA,EA/BcH,IAAA,IAAC,KAAEY,GAAMZ,EAAA,OACrBO,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SACGM,EAAKC,KAAKC,IACTP,EAAAA,EAAAA,KAACR,EAAQ,CACPK,OAAQU,EAAKV,OAEbH,MAAOa,EAAKb,MACZC,KAAMY,EAAKZ,KACXC,MAAOW,EAAKX,OAHPW,EAAKb,YAOV,EChBJc,EAAMA,KACV,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,YActB,OANAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAY,IAPfC,MACX,MACMC,EAAY,IAAIC,KAAK,uBAC3BP,IAASO,KAAKC,MAAQF,GAFN,oBAE4BG,QAAQ,IAAI,EAIxBJ,IAAQ,IACxC,MAAO,KACLK,cAAcP,EAAM,CACrB,GACA,KACIb,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAtB,SAAGU,GAAO,EAqBnB,EAlBa,CACX,CACEa,IAAK,MACL5B,MAAO,cACPE,OAAOI,EAAAA,EAAAA,KAACQ,EAAG,KAEb,CACEc,IAAK,mBACL5B,MAAO,YACPE,MAAO,oBAET,CACE0B,IAAK,WACL5B,MAAO,eACPE,MAAO,gBCvBX,EAPsB2B,KACpBzB,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAtB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACJC,EAAAA,EAAAA,KAACwB,EAAK,CAACnB,KAAMA,O,kDCoCjB,EApCcoB,KACZ,MAAOC,EAAiBC,IAAsBhB,EAAAA,EAAAA,UAAS,IASvD,OAPAC,EAAAA,EAAAA,YAAU,KAERgB,MAAMC,GACHC,MAAMC,GAAaA,EAASC,SAC5BF,MAAME,GAASL,EAAmBK,IAAM,GAC1C,KAGDhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAI,CACHC,MAAM,QACNC,YAAY,8DAA6DpC,UAEzED,EAAAA,EAAAA,MAAA,WAASsC,UAAU,OAAOC,GAAG,QAAOtC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,QAAOrC,UACpBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACC,GAAG,SAAQxC,SAAC,iBAMxBC,EAAAA,EAAAA,KAACwC,EAAQ,KAGTxC,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,mBAAkBrC,UAC/BC,EAAAA,EAAAA,KAACyC,EAAAA,GAAQ,CAAA1C,SAAE2B,UAGV,C","sources":["components/Stats/TableRow.js","components/Stats/Table.js","data/stats/personal.js","components/Stats/Personal.js","pages/Stats.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({\n  label, link, value, format,\n}) => (\n  <tr>\n    <td width=\"70%\">{label}</td>\n    <td>{link ? <a href={link}>{format(value)}</a> : format(value)}</td>\n  </tr>\n);\n\nTableRow.propTypes = {\n  format: PropTypes.func,\n  label: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n};\n\nTableRow.defaultProps = {\n  format: (x) => x,\n  link: null,\n  value: null,\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableRow from './TableRow';\n\nconst Table = ({ data }) => (\n  <table>\n    <tbody>\n      {data.map((pair) => (\n        <TableRow\n          format={pair.format}\n          key={pair.label}\n          label={pair.label}\n          link={pair.link}\n          value={pair.value}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      format: PropTypes.func,\n      label: PropTypes.string.isRequired,\n      link: PropTypes.string,\n      value: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  ).isRequired,\n};\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\n\nconst Age = () => {\n  const [age, setAge] = useState();\n\n  const tick = () => {\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\n    const birthTime = new Date('2001-08-31T23:45:00');\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => tick(), 25);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return <>{age}</>;\n};\n\nconst data = [\n  {\n    key: 'age',\n    label: 'Current age',\n    value: <Age />,\n  },\n  {\n    key: 'languages spoken',\n    label: 'Languages',\n    value: 'Chinese, English',\n  },\n  {\n    key: 'location',\n    label: 'Current city',\n    value: 'Chicago, IL',\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport Table from './Table';\nimport data from '../../data/stats/personal';\n\nconst PersonalStats = () => (\n  <>\n    <h3>ðŸ“Š Some stats about me</h3>\n    <Table data={data} />\n  </>\n);\n\nexport default PersonalStats;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Markdown from 'markdown-to-jsx';\nimport Main from '../layouts/Main';\nimport Personal from '../components/Stats/Personal';\nimport siteStatsMarkdown from '../data/stats/site.md';\n\nconst Stats = () => {\n  const [markdownContent, setMarkdownContent] = useState('');\n\n  useEffect(() => {\n    // Ensure that the markdown content is set correctly as a string\n    fetch(siteStatsMarkdown)\n      .then((response) => response.text())\n      .then((text) => setMarkdownContent(text));\n  }, []);\n\n  return (\n    <Main\n      title=\"Stats\"\n      description=\"Some statistics about Sam Cong and congtianyue233@gmail.com\"\n    >\n      <article className=\"post\" id=\"stats\">\n        <header>\n          <div className=\"title\">\n            <h2>\n              <Link to=\"/stats\">Stats</Link>\n            </h2>\n          </div>\n        </header>\n\n        {/* Personal Stats */}\n        <Personal />\n\n        {/* Render the Markdown content using markdown-to-jsx */}\n        <div className=\"markdown-content\">\n          <Markdown>{markdownContent}</Markdown>\n        </div>\n      </article>\n    </Main>\n  );\n};\n\nexport default Stats;\n"],"names":["TableRow","_ref","label","link","value","format","_jsxs","children","_jsx","width","href","defaultProps","x","data","map","pair","Age","age","setAge","useState","useEffect","timer","setInterval","tick","birthTime","Date","now","toFixed","clearInterval","_Fragment","key","PersonalStats","Table","Stats","markdownContent","setMarkdownContent","fetch","siteStatsMarkdown","then","response","text","Main","title","description","className","id","Link","to","Personal","Markdown"],"sourceRoot":""}